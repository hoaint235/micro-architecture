name: $(BuildID)

trigger:
  branches:
    include:
      - master
      - feature/fe/admin/*
  paths:
    include:
      - "/source/front-end/back-office/mra-admin/*"

pr:
  - master

pool:
  vmImage: ubuntu-latest

variables:
  - group: mra-admin
  - name: isMaster
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  - name: FIREBASE_TOKEN
    value: 0e7EL5p0cB3mwCgYIARAAGA4SNwF-L9IrRJTJPOXWPVQXxHCQT7HkQbyqDBjJHNmSR4kr1hea6j_B4axlcXw9kcdFT_fS_p5WiTQ
  - name: sourceDictionary
    value: $(Pipeline.Workspace)/s/source/front-end/back-office/mra-admin/

stages:
  - stage: Build
    jobs:
      - job: BuildJob
        displayName: InstallNodeJob
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "14.x"
            displayName: "Install Node.js"

          - script: npm install -g yarn

          - script: yarn install
            name: YarnInstall
            displayName: Yarn install
            workingDirectory: "$(sourceDictionary)"

          - script: yarn check-format
            name: YarnCheckFormat
            displayName: Yarn check format
            workingDirectory: "$(sourceDictionary)"

          - script: yarn build
            name: YarnBuild
            displayName: Yarn build
            workingDirectory: "$(sourceDictionary)"

          - task: CopyFiles@2
            inputs:
              SourceFolder: "$(sourceDictionary)"
              Contents: "build/**"
              TargetFolder: "$(Build.ArtifactStagingDirectory)"

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(Build.ArtifactStagingDirectory)"
              ArtifactName: "drop"

  - stage: Deploy
    dependsOn: Build
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['isDeploy'], 'true')))
    jobs:
      - job: DownloadBuild
        displayName: "DownloadBuildJob"
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              ArtifactName: "drop"
              DownloadPath: "$(Build.ArtifactStagingDirectory)"

      - job: DeployFirebase
        displayName:
        steps:
          - script: npm install -g firebase-tools
          - script: 'firebase deploy --token "$(firebaseToken)" -m "$(Build.BuildNumber)"'
            workingDirectory: "$(Build.ArtifactStagingDirectory)"
            displayName: 'firebase publish -m "$(Build.BuildNumber)"'
